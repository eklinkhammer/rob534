
==================== FINAL INTERFACE ====================
2017-02-01 02:23:14.831985 UTC

interface hw1-code-0.1.0.0-8aYr2pHdeuo3H0LfJWJHED:Lib 8001
  interface hash: dd15d431e8e1574ddebbd05e31a9e6bf
  ABI hash: e5e455c8a1ef02f6fb39b23c02627370
  export-list hash: e665465a4e59bf6acaa6a05000fdafcc
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: f6624f22fcdd76ed0ac6625466e2d712
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.bresenhamBasedSuperCoverLineAlg
  Lib.runAstar
  MyTypes.State{MyTypes.FourD MyTypes.TwoD}
module dependencies: AStar FileHandle MyTypes
package dependencies: PSQueue-1.1@PSQueue-1.1-DNpDWrWkOL4BwO0e9gII0d
                      array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 loop-0.3.0@loop-0.3.0-98VH1UqsOHy2KxBxA55ICY
                      matrix-0.3.5.0@matrix-0.3.5.0-Ai5MbZhiOOC3qmPfUuhoAV
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      parsec-3.1.11@parsec-3.1.11-37j7M1YEHqtEooY7BpJdri
                      pgm-0.1.4@pgm-0.1.4-JnQ1IdsQ5XPISkZjx2nGHv
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs
                      timeit-1.0.0.0@timeit-1.0.0.0-AIYmkSYH52M8DlaIvcyDoF
                      transformers-0.5.2.0@transformers-0.5.2.0
                      vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector.Fusion.Bundle
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text
                         text-1.2.2.1@text-1.2.2.1-9Yh8rJoh8fO2JMLWffT3Qs:Data.Text.Lazy
                         vector-0.11.0.0@vector-0.11.0.0-6uB77qGCxR6GPLxI2sqsX3:Data.Vector
import  -/  PSQueue-1.1@PSQueue-1.1-DNpDWrWkOL4BwO0e9gII0d:Data.PSQueue a3e2a49a00e5a52ce02e05b59da6fdf6
import  -/  base-4.9.0.0:Control.Exception 8762ca621bc15a8c1e8e34c703aba1aa
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:Data.Maybe 5f2ba364cbe65c060bc5436bc0b9d049
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.IO 7ddc7086a7fc3b7d7043cc7bc59a04ba
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Real 08bf4acb5f2508f89d6fbcd57fe232e9
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  base-4.9.0.0:System.IO ad985d7a3fc986e9b9c610fb344d9106
import  -/  base-4.9.0.0:System.Timeout 59432fc1fe5c1da7cb997c72fe810a7a
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Strict 48e097497655818e164c2bb81a1d7b2d
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 7378e41b7749213c8c88ceb6b0665d4c
import  -/  AStar 4efe7f69051fc348f32536756f81c847
  exports: f0d1a2f45c9ab035a45252986d535e89
  aStar 44c6447c127012941ee9848ca0993bac
import  -/  FileHandle a3a71d8036d528064b3c90e68a52dff9
  exports: ec840771c98f3041d0a5039005a31432
  displayPathOnMap 053e801f07633dd616a7c4a285a4d6bd
  fileToMap 62554a91ffbd375ec15543206aacfa27
  mapToFile 43f333bafe7f193b2dc2eccc822dbfa2
import  -/  MyTypes 26368e049ef499abf6515d2cf3fe8507
  exports: b7a279eeb022bf69ab9e5c4b3a4b82c7
  Epsilon 2bf44ebb186a386d5d965f7e01a2b742
  FourD 6500e3051b3e9f65b99dcfdc93a6fb36
  Goal a70ee73a111913a931a2cf0fb87786aa
  Path 0461946d9312580f9079a814acb11627
  Pos 3075a346a62d94c2c2f5e5f71847c052
  Start 8e51269e7450533f307db14dd1ae3c1f
  State 219fc6fc62da7b5e9c40aeda9508e6c0
  TwoD 4c5d6621d225a5cbf1be476e1b8b0810
  WorldMap c3b5614d6248fe8367df4baecfc7ef03
import  -/  matrix-0.3.5.0@matrix-0.3.5.0-Ai5MbZhiOOC3qmPfUuhoAV:Data.Matrix a687e632fe85518f4a0d171926d72f1c
import  -/  timeit-1.0.0.0@timeit-1.0.0.0-AIYmkSYH52M8DlaIvcyDoF:System.TimeIt a60042dd40e34c13fba4aecb2ca2d130
5cef828709f3874543fc35f7eab09ab1
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lib.$trModule2 Lib.$trModule1) -}
239d02d91334c56cb816d4f9e7d413c9
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Lib"#) -}
079398495203b2d4d3eedd7a31031d4d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "hw1-code-0.1.0.0-8aYr2pHdeuo3H0LfJWJHED"#) -}
9605c9510cd5f6d7981c3649693786d0
  $wbresenhamBasedSuperCoverLineAlg ::
    GHC.Prim.Int#
    -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Prim.Int# -> [MyTypes.Pos]
  {- Arity: 4, HasNoCafRefs, Strictness: <S,U><S,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 let {
                   y :: GHC.Types.Int = GHC.Types.I# ww1
                 } in
                 let {
                   x :: GHC.Types.Int = GHC.Types.I# ww
                 } in
                 let {
                   $j :: GHC.Prim.Void# -> [MyTypes.Pos]
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ (w :: GHC.Prim.Void#)[OneShot] ->
                     let {
                       x1 :: GHC.Prim.Int# = GHC.Prim.-# ww2 ww
                     } in
                     let {
                       $w$j :: GHC.Types.Int -> GHC.Prim.Int# -> [MyTypes.Pos]
                         {- Arity: 2, Strictness: <L,U(U)><S,U>, Inline: [0] -}
                       = \ (w1 :: GHC.Types.Int)[OneShot]
                           (ww4 :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           x2 :: GHC.Prim.Int# = GHC.Prim.-# ww3 ww1
                         } in
                         let {
                           $w$j1 :: GHC.Types.Int -> GHC.Prim.Int# -> [MyTypes.Pos]
                             {- Arity: 2, Strictness: <L,U(U)><S,U>, Inline: [0] -}
                           = \ (w2 :: GHC.Types.Int)[OneShot]
                               (ww5 :: GHC.Prim.Int#)[OneShot] ->
                             let {
                               x3 :: GHC.Prim.Int# = GHC.Prim.*# 2# ww4
                             } in
                             let {
                               y1 :: GHC.Prim.Int# = GHC.Prim.*# 2# ww5
                             } in
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# x3 y1) of wild {
                               GHC.Types.False
                               -> let {
                                    wild1 :: GHC.Types.Int = GHC.Types.I# ww5
                                  } in
                                  Lib.$wbresenhamHelperOtherOct
                                    0#
                                    ww5
                                    (GHC.Types.I# y1)
                                    (GHC.Types.I# x3)
                                    w1
                                    w2
                                    wild1
                                    wild1
                                    (GHC.Types.I# ww2)
                                    (GHC.Types.I# ww3)
                               GHC.Types.True
                               -> let {
                                    wild1 :: GHC.Types.Int = GHC.Types.I# ww4
                                  } in
                                  Lib.$wbresenhamHelperFirstOct
                                    0#
                                    ww4
                                    (GHC.Types.I# y1)
                                    (GHC.Types.I# x3)
                                    w1
                                    w2
                                    wild1
                                    wild1
                                    x
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.<# x2 0#) of wild {
                           GHC.Types.False -> $w$j1 Lib.bresenhamBasedSuperCoverLineAlg2 x2
                           GHC.Types.True
                           -> $w$j1
                                Lib.bresenhamBasedSuperCoverLineAlg1
                                (GHC.Prim.negateInt# x2) }
                     } in
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<# x1 0#) of wild {
                       GHC.Types.False -> $w$j Lib.bresenhamBasedSuperCoverLineAlg2 x1
                       GHC.Types.True
                       -> $w$j
                            Lib.bresenhamBasedSuperCoverLineAlg1
                            (GHC.Prim.negateInt# x1) }
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==# ww ww2) of wild {
                   GHC.Types.False -> $j GHC.Prim.void#
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==# ww1 ww3) of wild1 {
                        GHC.Types.False -> $j GHC.Prim.void#
                        GHC.Types.True
                        -> GHC.Types.:
                             @ MyTypes.Pos
                             (x, y)
                             (GHC.Types.[] @ MyTypes.Pos) } }) -}
dea69514f74e367af891129eaab65268
  $wbresenhamHelperFirstOct ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [(GHC.Types.Int, GHC.Types.Int)]
  {- Arity: 10, HasNoCafRefs,
     Strictness: <S,U><S,U><L,1*U(U)><L,1*U(U)><L,U(U)><L,U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
656956d9387533475be578bca32ded56
  $wbresenhamHelperOtherOct ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> [(GHC.Types.Int, GHC.Types.Int)]
  {- Arity: 10, HasNoCafRefs,
     Strictness: <S,U><S,U><L,1*U(U)><L,1*U(U)><L,U(U)><L,U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
3df42bb3fe93ec044ad8cc5e028c797c
  $wrunAStarTimed ::
    MyTypes.WorldMap
    -> MyTypes.Start
    -> MyTypes.Goal
    -> MyTypes.Epsilon
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, MyTypes.Path #)
  {- Arity: 5,
     Strictness: <L,U(U,U,U,U,U,U(U,A,U))><L,U><L,U><L,U(U)><S,U>,
     Inline: [0] -}
6723b8c1dabe49cfa880dcfeb7cd257a
  $wrunAstar ::
    Lib.FileName
    -> Lib.FileName
    -> MyTypes.Start
    -> MyTypes.Goal
    -> MyTypes.Epsilon
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><L,U(U)><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: Lib.FileName)
                   (w1 :: Lib.FileName)
                   (w2 :: MyTypes.Start)
                   (w3 :: MyTypes.Goal)
                   (w4 :: MyTypes.Epsilon)
                   (w5 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case FileHandle.fileToMap1 w w5 of ds1 { (#,#) ipv ipv1 ->
                 case Lib.$wrunAStarTimed
                        ipv1
                        w2
                        w3
                        w4
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 FileHandle.mapToFile1
                   w1
                   (FileHandle.displayPathOnMap ipv1 ipv3)
                   ipv2 } }) -}
a6d210b4a3ba46e5b6823f92da762fae
  type FileName = GHC.Base.String
6839fc70a1fd9907424b5c3eab76c225
  bresenhamBasedSuperCoverLineAlg ::
    MyTypes.Pos -> MyTypes.Pos -> [MyTypes.Pos]
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)S(S)),1*U(U(U),U(U))><S(S(S)S(S)),1*U(U(U),U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: MyTypes.Pos) (w1 :: MyTypes.Pos) ->
                 case w of ww { (,) ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.I# ww4 ->
                 case ww2 of ww5 { GHC.Types.I# ww6 ->
                 case w1 of ww7 { (,) ww8 ww9 ->
                 case ww8 of ww10 { GHC.Types.I# ww11 ->
                 case ww9 of ww12 { GHC.Types.I# ww13 ->
                 Lib.$wbresenhamBasedSuperCoverLineAlg
                   ww4
                   ww6
                   ww11
                   ww13 } } } } } }) -}
856a1121a0bceaac402825ec32f90319
  bresenhamBasedSuperCoverLineAlg1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# -1#) -}
1cdc6b8ca1c4fa08e5a4804357cd473d
  bresenhamBasedSuperCoverLineAlg2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
b41ec4830e2d6d31fb570dd23fdeac03
  runAstar ::
    Lib.FileName
    -> Lib.FileName
    -> MyTypes.Start
    -> MyTypes.Goal
    -> MyTypes.Epsilon
    -> GHC.Types.Double
    -> GHC.Types.IO ()
  {- Arity: 7, Strictness: <L,U><L,U><L,U><L,U><L,U(U)><L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.runAstar1
                  `cast`
                (<Lib.FileName>_R
                 ->_R <Lib.FileName>_R
                 ->_R <MyTypes.Start>_R
                 ->_R <MyTypes.Goal>_R
                 ->_R <MyTypes.Epsilon>_R
                 ->_R <GHC.Types.Double>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
e6a79867ced91f8f901e26c58dc3cba1
  runAstar1 ::
    Lib.FileName
    -> Lib.FileName
    -> MyTypes.Start
    -> MyTypes.Goal
    -> MyTypes.Epsilon
    -> GHC.Types.Double
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7, Strictness: <L,U><L,U><L,U><L,U><L,U(U)><L,A><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (7, True, True)
                (\ (w :: Lib.FileName)
                   (w1 :: Lib.FileName)
                   (w2 :: MyTypes.Start)
                   (w3 :: MyTypes.Goal)
                   (w4 :: MyTypes.Epsilon)
                   (w5 :: GHC.Types.Double)
                   (w6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Lib.$wrunAstar w w1 w2 w3 w4 w6) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

